#!/usr/bin/env ruby
require 'unified2'

path = ARGV.first

Unified2.configuration do
  sensor :interface => 'en1',
    :name => 'Unified2 Example', :id => 0
end


def render(event)
  data = "EVENT\n"
  data += "\tevent id: #{event.id}\n"
  data += "\tsensor id: #{event.sensor.id}\n"
  data += "\ttimestamp: #{event.timestamp.strftime('%D %H:%M:%S')}\n"
  data += "\tseverity: #{event.severity}\n"
  data += "\tprotocol: #{event.protocol}\n"
  data += "\tsource ip: #{event.source_ip} (#{event.source_port})\n"
  data += "\tdestination ip: #{event.destination_ip} (#{event.destination_port})\n"
  data += "\tsignature: #{event.signature.id}\n"
  data += "\tclassification: #{event.classification.id}\n"
  data += "\tchecksum: #{event.checksum}\n"

  packet_count = 1
  length = event.packets.count

  event.packets.each do |packet|
    data += "\n\tPACKET  (#{packet_count} of #{length})\n\n"

    data += "\tsensor id: #{event.sensor.id}"
    data += "\tevent id: #{event.id}"
    data += "\tevent second: #{packet.event_timestamp.to_i}\n"
    data += "\tpacket second: #{packet.timestamp.to_i}"
    data += "\tpacket microsecond: #{packet.microsecond.to_i}\n"
    data += "\tlinktype: #{packet.link_type}"
    data += "\tpacket length: #{packet.length}\n"
    data += "\tchecksum: #{packet.checksum}\n\n"

    hexdump = packet.hexdump(:width => 16)
    hexdump.each_line { |line| data += "\t" + line }

    packet_count += 1
  end

  extra_count = 1
  length = event.extras.count

  event.extras.each do |extra|
    data += "\n\tEXTRA   (#{extra_count} of #{length})\n\n"

    data += "\tname: #{extra.name}"
    data += "\tevent type: #{extra.header[:event_type]}"
    data += "\tevent length: #{extra.header[:event_length]}\n"
    data += "\tsensor id: #{event.sensor.id}"
    data += "\tevent id: #{event.id}"
    data += "\tevent second: #{extra.timestamp}\n"
    data += "\ttype: #{extra.type_id}"
    data += "\tdata type: #{extra.data_type}"
    data += "\tlength: #{extra.length}\n"
    data += "\tvalue: " + extra.value + "\n"

    extra_count += 1
  end

  data += "\n"
end

Unified2.read(path) do |event|
  puts render(event)
end
